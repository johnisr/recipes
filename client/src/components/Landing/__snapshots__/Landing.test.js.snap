// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Landing
    recipes={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <n
          className="slider"
>
          
</n>,
        <Button
          as={[Function]}
          className="slider__button--left"
          icon={true}
          inverted={true}
          role="button"
          size="large"
>
          <Icon
                    as="i"
                    name="angle left"
          />
</Button>,
        <Button
          as={[Function]}
          className="slider__button--right"
          icon={true}
          inverted={true}
          role="button"
          size="large"
>
          <Icon
                    as="i"
                    name="angle right"
          />
</Button>,
        <div
          className="slider__dots"
>
          <div>
                    <Button
                              as={[Function]}
                              circular={true}
                              className="slider__dot"
                              compact={true}
                              content={1}
                              role="button"
                              size="small"
                              slide={0}
                    />
                    <Button
                              as={[Function]}
                              circular={true}
                              className="slider__dot"
                              compact={true}
                              content={NaN}
                              role="button"
                              size="small"
                              slide={NaN}
                    />
          </div>
</div>,
      ],
      "className": "slider__container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [],
          "className": "slider",
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": <Icon
            as="i"
            name="angle left"
/>,
          "className": "slider__button--left",
          "icon": true,
          "inverted": true,
          "role": "button",
          "size": "large",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "i",
            "name": "angle left",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": <Icon
            as="i"
            name="angle right"
/>,
          "className": "slider__button--right",
          "icon": true,
          "inverted": true,
          "role": "button",
          "size": "large",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "i",
            "name": "angle right",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <Button
                        as={[Function]}
                        circular={true}
                        className="slider__dot"
                        compact={true}
                        content={1}
                        role="button"
                        size="small"
                        slide={0}
            />
            <Button
                        as={[Function]}
                        circular={true}
                        className="slider__dot"
                        compact={true}
                        content={NaN}
                        role="button"
                        size="small"
                        slide={NaN}
            />
</div>,
          "className": "slider__dots",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                as={[Function]}
                circular={true}
                className="slider__dot"
                compact={true}
                content={1}
                role="button"
                size="small"
                slide={0}
/>,
              Array [],
              <Button
                as={[Function]}
                circular={true}
                className="slider__dot"
                compact={true}
                content={NaN}
                role="button"
                size="small"
                slide={NaN}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "firstButton",
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "circular": true,
                "className": "slider__dot",
                "compact": true,
                "content": 1,
                "role": "button",
                "size": "small",
                "slide": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "lastButton",
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "circular": true,
                "className": "slider__dot",
                "compact": true,
                "content": NaN,
                "role": "button",
                "size": "small",
                "slide": NaN,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <n
            className="slider"
>
            
</n>,
          <Button
            as={[Function]}
            className="slider__button--left"
            icon={true}
            inverted={true}
            role="button"
            size="large"
>
            <Icon
                        as="i"
                        name="angle left"
            />
</Button>,
          <Button
            as={[Function]}
            className="slider__button--right"
            icon={true}
            inverted={true}
            role="button"
            size="large"
>
            <Icon
                        as="i"
                        name="angle right"
            />
</Button>,
          <div
            className="slider__dots"
>
            <div>
                        <Button
                                    as={[Function]}
                                    circular={true}
                                    className="slider__dot"
                                    compact={true}
                                    content={1}
                                    role="button"
                                    size="small"
                                    slide={0}
                        />
                        <Button
                                    as={[Function]}
                                    circular={true}
                                    className="slider__dot"
                                    compact={true}
                                    content={NaN}
                                    role="button"
                                    size="small"
                                    slide={NaN}
                        />
            </div>
</div>,
        ],
        "className": "slider__container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [],
            "className": "slider",
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": <Icon
              as="i"
              name="angle left"
/>,
            "className": "slider__button--left",
            "icon": true,
            "inverted": true,
            "role": "button",
            "size": "large",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "i",
              "name": "angle left",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": <Icon
              as="i"
              name="angle right"
/>,
            "className": "slider__button--right",
            "icon": true,
            "inverted": true,
            "role": "button",
            "size": "large",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "i",
              "name": "angle right",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              <Button
                            as={[Function]}
                            circular={true}
                            className="slider__dot"
                            compact={true}
                            content={1}
                            role="button"
                            size="small"
                            slide={0}
              />
              <Button
                            as={[Function]}
                            circular={true}
                            className="slider__dot"
                            compact={true}
                            content={NaN}
                            role="button"
                            size="small"
                            slide={NaN}
              />
</div>,
            "className": "slider__dots",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Button
                  as={[Function]}
                  circular={true}
                  className="slider__dot"
                  compact={true}
                  content={1}
                  role="button"
                  size="small"
                  slide={0}
/>,
                Array [],
                <Button
                  as={[Function]}
                  circular={true}
                  className="slider__dot"
                  compact={true}
                  content={NaN}
                  role="button"
                  size="small"
                  slide={NaN}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "firstButton",
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "circular": true,
                  "className": "slider__dot",
                  "compact": true,
                  "content": 1,
                  "role": "button",
                  "size": "small",
                  "slide": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "lastButton",
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "circular": true,
                  "className": "slider__dot",
                  "compact": true,
                  "content": NaN,
                  "role": "button",
                  "size": "small",
                  "slide": NaN,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
